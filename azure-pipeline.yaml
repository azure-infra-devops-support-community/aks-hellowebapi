trigger:
  branches:
    include:
      - main

pool:
  name: linux-agent-pool

variables:
  # repositoryUrl: "demoakschidi.azurecr.io/webapi"
  azureContainerRegistrySC: eng-lab-acr
  repositoryUrl: "docker.io/iheanacho/webapi"
  imageName: webapi
  tagName: $(Build.BuildId)
  kubernetesNamespace: default
  dockerHubSC: dockerhubSC
  kubernetesSC: eng-aks-demo

stages:
- stage: BuildAndPush
  displayName: "Build and Push Docker Image"
  jobs:
  - job: Build
    displayName: "Build and Push Docker Image to ACR"
    steps:
    - checkout: self

    - task: Docker@2
      displayName: "Build and Push Docker Image"
      inputs:
        containerRegistry: "$(dockerHubSC)"
        repository: $(repositoryUrl)
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tagName)

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/*.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'helloapp'
        publishLocation: 'Container'

- stage: DeployToAKS
  displayName: "Deploy to AKS"
  dependsOn: BuildAndPush
  jobs:
  - deployment: Deploy
    displayName: "Deploy to AKS"
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'helloapp'
              itemPattern: '**/*.yaml'
              targetPath: '$(System.ArtifactsDirectory)'

          - task: KubectlInstaller@0
            inputs:
              kubectlVersion: 'latest'

          - task: KubernetesManifest@1
            displayName: "Deploy to AKS"
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: $(kubernetesSC)
              namespace: 'default'
              manifests: '$(System.ArtifactsDirectory)/manifest/webapi-deployment.yaml'
              containers: "$(repositoryUrl):$(tagName)"

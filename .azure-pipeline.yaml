trigger:
  branches:
    include:
      - main

pool:
  name: linux-agent-pool

variables:
  # Set the name of your ACR and AKS cluster
  acrName: "demoakschidi.azurecr.io"
  imageName: webapi
  kubernetesNamespace: default
  azureContainerRegistrySC: eng-lab-acr
  kubernetesSC: eng-aks-demo

stages:
- stage: BuildAndPush
  displayName: "Build and Push Docker Image"
  jobs:
  - job: Build
    displayName: "Build and Push Docker Image to ACR"
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.x'
    
    - checkout: self

    - task: Docker@2
      displayName: "Build and Push Docker Image"
      inputs:
        containerRegistry: "$(azureContainerRegistrySC)"
        repository: "$(acrName)/$(imageName)"
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)

- stage: DeployToAKS
  displayName: "Deploy to AKS"
  dependsOn: BuildAndPush
  jobs:
  - deployment: Deploy
    displayName: "Deploy to AKS"
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubectlInstaller@0
            inputs:
              kubectlVersion: 'latest'

          # - task: Kubernetes@1
          #   inputs:
          #     connectionType: 'Kubernetes Service Connection'
          #     kubernetesServiceEndpoint: 'eng-aks-demo'
          #     command: 'apply'
          #     secretType: 'dockerRegistry'
          #     containerRegistryType: 'Azure Container Registry'

          - task: KubernetesManifest@1
            inputs:
              action: 'deploy'
              connectionType: 'kubernetesServiceConnection'
              kubernetesServiceConnection: 'eng-aks-demo'
              namespace: '$(kubernetesNamespace)'
              manifests: '**/webapi-app.yaml'
              containers: '$(acrName)/$(imageName):$(Build.BuildId)'
          # - task: KubernetesManifest@0
          #   displayName: "Deploy to AKS"
          #   inputs:
          #     kubernetesServiceConnection: $(kubernetesSC)
          #     namespace: $(kubernetesNamespace)
          #     manifests: |
          #       **/webapi-app.yaml
          #     containers: |
          #       $(acrName)/$(imageName):$(Build.BuildId)
